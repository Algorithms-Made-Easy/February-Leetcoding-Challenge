/**
 * Definition for singly-linked list.
 * class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */

public class Solution {
    public boolean hasCycle(ListNode head) {
        Set<ListNode> nodes=new HashSet<>();
        
        while(head!=null){
            if(nodes.contains(head)){
                return true;
            }
            nodes.add(head);
            head=head.next;
        }
        
        return false;
    }
}

public class Solution {
    public boolean hasCycle(ListNode head) {
        if(head==null) return false;
        
        ListNode slow=head;
        ListNode fast=head.next;
        
        while(slow!=fast){
            slow=slow.next;
            if(fast!=null && fast.next!=null)
                fast=fast.next.next;
            else{
                return false;
            }
        }
        
        return true;
    }
}
